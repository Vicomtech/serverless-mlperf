"""
This file contains tools to handle json data.
"""
import os
import json
import numpy as np


class NumpyEncoder(json.JSONEncoder):
    """
    Encodes NumPy data to JSON-compatible format.
    """
    def default(self, o):
        if isinstance(o, (np.int_, np.intc, np.intp, np.int8, np.int16,
                          np.int32, np.int64, np.uint8, np.uint16, np.uint32,
                          np.uint64)):
            return int(o)
        elif isinstance(o, (np.float_, np.float16, np.float32, np.float64)):
            return float(o)
        elif isinstance(o, (np.ndarray,)):
            return o.tolist()
        else:
            return json.JSONEncoder.default(self, o)


def read_from_file(input_json_filename):
    """
    Reads input data from a local JSON file.
    """
    data = json.loads(open(input_json_filename).read())
    return data


def write_to_file(data, output_json_filename=""):
    """
    Writes output data to a local JSON file.
    """
    if output_json_filename:
        with open(output_json_filename, 'w') as outfile:
            json.dump(data, outfile, cls=NumpyEncoder, indent=4)


def read_from_s3(s3_client, bucket, key):
    """
    Reads input data from a JSON file in S3.
    """
    s3_object = s3_client.get_object(Bucket=bucket, Key=key)
    data = json.loads(s3_object['Body'].read().decode('utf-8'))
    return data


def write_to_s3(data, s3_client, bucket, key, prefix):
    """
    Writes output data to a JSON file in S3.
    """
    if prefix[len(prefix) - 1] != '/':
        prefix += '/'
    s3_client.put_object(Bucket=bucket,
                         Key=prefix + os.path.basename(key),
                         ContentType='application/json',
                         Body=json.dumps(data, cls=NumpyEncoder, indent=2))
