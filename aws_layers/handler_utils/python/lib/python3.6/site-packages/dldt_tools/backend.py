"""
        the virtual class of MLPerf backend.
"""


class Backend():

    def __init__(self):
        """
                the virtual class of MLPerf backend.
        """
        self.inputs = []
        self.outputs = []

    def version(self):
        """
          gets inference version of the selected framework.
        """
        raise NotImplementedError("Backend:version")

    def name(self):
        """
        prints the backend name
        """
        raise NotImplementedError("Backend:name")

    def load(self, model_path, inputs=None, outputs=None, make_profiling=False):
        """
        loads the DNN model into the backend inference
        :param model_path: the model path to load the model
        :param inputs: the input layer name of the DNN model
        :param outputs: the output layer name of the DNN model
        :param make_profiling: for enabling profiling
        :return:
        """
        raise NotImplementedError("Backend:load")

    def load_input(self, image):
        """
        Loads the dataset image provided from OSS (Amazon S3).
        """
        raise NotImplementedError("Backend:load_input")

    def predict(self, feed):
        """
             makes the prediciton of the DNN inference
        """
        raise NotImplementedError("Backend:predict")

    def resize_input(self, frame, target_shape):
        """
            Resizes the input data to the target shape
        """
        raise NotImplementedError("Backend:resize_input")

    def predict_mlperf(self, feed):
        """
         (optional) makes the prediciton of the DNN inference with profiling stats
        :param feed: the array floating point data .
        :return:
        """
        raise NotImplementedError("Backend:predict_mlperf")

    def get_profiling(self):
        """
            gets the profiling results
        """
        raise NotImplementedError("Backend:get_profiling")

    def set_config(self, config):
        """
            set the configuration of the supported_profiles.py
        """
        raise NotImplementedError("Backend:set_config")
